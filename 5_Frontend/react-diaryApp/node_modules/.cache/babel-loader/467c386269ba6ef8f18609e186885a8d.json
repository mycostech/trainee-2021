{"ast":null,"code":"export let IUserActionType;\n\n(function (IUserActionType) {\n  IUserActionType[\"GET_USER_START\"] = \"GET_USER_START\";\n  IUserActionType[\"GET_USER_SUCCESS\"] = \"GET_USER_SUCCESS\";\n  IUserActionType[\"GET_USER_ERROR\"] = \"GET_USER_ERROR\";\n  IUserActionType[\"ADD_USER_START\"] = \"ADD_USER_START\";\n  IUserActionType[\"ADD_USER_SUCCESS\"] = \"ADD_USER_SUCCESS\";\n  IUserActionType[\"ADD_USER_ERROR\"] = \"ADD_USER_ERROR\";\n})(IUserActionType || (IUserActionType = {}));","map":{"version":3,"sources":["/Users/macbook/Document/Mycos-trainee/5_Frontend/react-diaryApp/src/model/IUserType.ts"],"names":["IUserActionType"],"mappings":"AAoBA,WAAYA,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e","sourcesContent":["export interface IUser {\n    id?: string\n    fname: string\n    lname: string\n    nickname: string\n    email: string\n    password: string\n    profileImage?: string\n    birthdate: any\n}\n\nexport interface IUserState{\n    userInfo?: IUser;\n    loading: boolean;\n    error?: Error;\n    getsuccess?: boolean;\n    \n    logined?: boolean\n}\n\nexport enum IUserActionType{\n\n    GET_USER_START =  'GET_USER_START',\n    GET_USER_SUCCESS = 'GET_USER_SUCCESS',\n    GET_USER_ERROR = 'GET_USER_ERROR',\n\n    ADD_USER_START = 'ADD_USER_START',\n    ADD_USER_SUCCESS = 'ADD_USER_SUCCESS',\n    ADD_USER_ERROR = 'ADD_USER_ERROR'\n\n}\n\nexport type UserAction = IUserActionType\n\nexport interface IUserAction{\n\n    type: IUserActionType;\n    payload?:  any;\n\n}"]},"metadata":{},"sourceType":"module"}