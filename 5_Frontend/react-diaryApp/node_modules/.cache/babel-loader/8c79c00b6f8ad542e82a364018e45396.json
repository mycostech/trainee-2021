{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Document/Mycos-trainee/5_Frontend/react-diaryApp/src/components/EditEventForm/EditEventForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editEvent, getEventDetail } from '../../Action/EventAction';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditEventForm() {\n  _s();\n\n  const history = useHistory();\n  const {\n    eventId\n  } = useParams();\n  const dispatch = useDispatch();\n  const [count, setCount] = useState(0);\n  const event = useSelector(state => state.EventReducer);\n  const user = useSelector(state => state.UserReducer);\n  const auth = useSelector(state => state.AuthReducer);\n  console.log(\"eventId, \", Number(eventId));\n  const [_dateTime, setDateTime] = useState();\n  const [_eventname, setEventName] = useState('');\n  const [_memo, setMemo] = useState('');\n\n  const onSubmitForm = () => {\n    if (user.success && auth.logingIn) {\n      var _user$userInfo;\n\n      let newEvent = {\n        dateTime: _dateTime,\n        eventName: _eventname,\n        memo: _memo,\n        userId: (_user$userInfo = user.userInfo) === null || _user$userInfo === void 0 ? void 0 : _user$userInfo.id\n      };\n      console.log(\"event ID ==> \", eventId);\n      console.log(newEvent);\n      dispatch(editEvent(Number(eventId), newEvent));\n    }\n  };\n\n  useEffect(() => {\n    if (count === 0) {\n      dispatch(getEventDetail(Number(eventId)));\n\n      if (event.getSuccess) {\n        var _event$event, _event$event2, _event$event3;\n\n        setDateTime((_event$event = event.event) === null || _event$event === void 0 ? void 0 : _event$event.dateTime);\n        setEventName((_event$event2 = event.event) === null || _event$event2 === void 0 ? void 0 : _event$event2.eventName);\n        setMemo((_event$event3 = event.event) === null || _event$event3 === void 0 ? void 0 : _event$event3.memo);\n      }\n    }\n\n    if (event.updateSuccess) {\n      history.push('/events');\n    }\n\n    setCount(1);\n    return () => {\n      console.log(\"edit terminate\");\n    };\n  }, [setDateTime, setEventName, setMemo, setCount, dispatch, event]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: event.getSuccess && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditEventForm, \"SGfDQiLvJ0lheGGNiGHpZn65bwg=\", false, function () {\n  return [useHistory, useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EditEventForm;\nexport default EditEventForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditEventForm\");","map":{"version":3,"sources":["/Users/macbook/Document/Mycos-trainee/5_Frontend/react-diaryApp/src/components/EditEventForm/EditEventForm.tsx"],"names":["React","useEffect","useState","useHistory","useParams","useDispatch","useSelector","editEvent","getEventDetail","EditEventForm","history","eventId","dispatch","count","setCount","event","state","EventReducer","user","UserReducer","auth","AuthReducer","console","log","Number","_dateTime","setDateTime","_eventname","setEventName","_memo","setMemo","onSubmitForm","success","logingIn","newEvent","dateTime","eventName","memo","userId","userInfo","id","getSuccess","updateSuccess","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {Link, useHistory, useParams}  from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../Reducer'\nimport { editEvent, getEventDetail } from '../../Action/EventAction';\nimport { IEvent } from '../../model/IEventType';\n\nfunction EditEventForm(){\n\n    const history = useHistory();\n    const {eventId} = useParams<{eventId?: string}>();\n    \n    const dispatch = useDispatch()\n    const [count, setCount] = useState<number>(0);\n\n    const event = useSelector((state: RootState) => state.EventReducer)\n    const user = useSelector((state: RootState) => state.UserReducer)\n    const auth = useSelector((state: RootState) => state.AuthReducer)\n    \n    console.log(\"eventId, \",Number(eventId))\n\n    const [_dateTime, setDateTime] = useState<any>();\n    const [_eventname, setEventName] = useState<string | undefined>('');\n    const [_memo, setMemo] = useState<string | undefined>('');\n    \n\n    const onSubmitForm = () => {\n\n        if(user.success && auth.logingIn){\n\n            let newEvent: IEvent = {\n                dateTime: _dateTime,\n                eventName: _eventname,\n                memo: _memo,\n                userId: user.userInfo?.id\n            }\n            console.log(\"event ID ==> \",eventId)\n            console.log(newEvent)\n\n            dispatch(editEvent(Number(eventId), newEvent))\n        }\n    }\n\n    useEffect(() => {\n        \n        if(count === 0){\n\n            dispatch(getEventDetail(Number(eventId)))\n            \n            if(event.getSuccess){\n                setDateTime(event.event?.dateTime)\n                setEventName(event.event?.eventName)\n                setMemo(event.event?.memo)\n            }\n            \n        }\n        if(event.updateSuccess ){\n            history.push('/events')\n        }\n        \n        setCount(1)\n\n        return () => {\n            console.log(\"edit terminate\")\n        }\n\n    }, [setDateTime, setEventName, setMemo, setCount, dispatch, event])\n        \n    return (\n        <div>{event.getSuccess &&\n            <>\n            \n            </>\n        }\n            \n        </div>\n    )\n}\n\nexport default EditEventForm"]},"metadata":{},"sourceType":"module"}