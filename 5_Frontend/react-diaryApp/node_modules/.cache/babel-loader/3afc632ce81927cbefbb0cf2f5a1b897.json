{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Document/Mycos-trainee/5_Frontend/react-diaryApp/src/components/EditEventForm/EditEventForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editEvent, getEventDetail } from '../../Action/EventAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditEventForm() {\n  _s();\n\n  const history = useHistory();\n  const {\n    eventId\n  } = useParams();\n  const dispatch = useDispatch();\n  const [count, setCount] = useState(0);\n  const event = useSelector(state => state.EventReducer);\n  const user = useSelector(state => state.UserReducer);\n  const auth = useSelector(state => state.AuthReducer);\n  console.log(\"eventId, \", Number(eventId));\n  const [_dateTime, setDateTime] = useState();\n  const [_eventname, setEventName] = useState('');\n  const [_memo, setMemo] = useState('');\n\n  const onSubmitForm = () => {\n    if (user.success && auth.logingIn) {\n      var _user$userInfo;\n\n      let newEvent = {\n        dateTime: _dateTime,\n        eventName: _eventname,\n        memo: _memo,\n        userId: (_user$userInfo = user.userInfo) === null || _user$userInfo === void 0 ? void 0 : _user$userInfo.id\n      };\n      console.log(\"event ID ==> \", eventId);\n      console.log(newEvent);\n      dispatch(editEvent(Number(eventId), newEvent));\n    }\n  };\n\n  useEffect(() => {\n    if (count === 0) {\n      dispatch(getEventDetail(Number(eventId)));\n    }\n\n    if (event.updateSuccess) {\n      history.push('/events');\n    }\n\n    setCount(1);\n    return () => {\n      var _event$event, _event$event2, _event$event3;\n\n      console.log(\"event name ==> \", _eventname);\n      setDateTime((_event$event = event.event) === null || _event$event === void 0 ? void 0 : _event$event.dateTime);\n      setEventName((_event$event2 = event.event) === null || _event$event2 === void 0 ? void 0 : _event$event2.eventName);\n      setMemo((_event$event3 = event.event) === null || _event$event3 === void 0 ? void 0 : _event$event3.memo);\n      console.log(\"edit terminate\");\n    };\n  }, [setDateTime, setEventName, setMemo, setCount, dispatch, event]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: count == 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/events\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), event.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"date time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: _dateTime,\n          onChange: e => {\n            setDateTime(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Event Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: _eventname,\n          onChange: e => {\n            setEventName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Memo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: _memo,\n          onChange: e => {\n            setMemo(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSubmitForm,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditEventForm, \"SGfDQiLvJ0lheGGNiGHpZn65bwg=\", false, function () {\n  return [useHistory, useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EditEventForm;\nexport default EditEventForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditEventForm\");","map":{"version":3,"sources":["/Users/macbook/Document/Mycos-trainee/5_Frontend/react-diaryApp/src/components/EditEventForm/EditEventForm.tsx"],"names":["React","useEffect","useState","Link","useHistory","useParams","useDispatch","useSelector","editEvent","getEventDetail","EditEventForm","history","eventId","dispatch","count","setCount","event","state","EventReducer","user","UserReducer","auth","AuthReducer","console","log","Number","_dateTime","setDateTime","_eventname","setEventName","_memo","setMemo","onSubmitForm","success","logingIn","newEvent","dateTime","eventName","memo","userId","userInfo","id","updateSuccess","push","loading","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {Link, useHistory, useParams}  from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../Reducer'\nimport { editEvent, getEventDetail } from '../../Action/EventAction';\nimport { IEvent } from '../../model/IEventType';\n\nfunction EditEventForm(){\n\n    const history = useHistory();\n    const {eventId} = useParams<{eventId?: string}>();\n    \n    const dispatch = useDispatch()\n    const [count, setCount] = useState<number>(0);\n\n    const event = useSelector((state: RootState) => state.EventReducer)\n    const user = useSelector((state: RootState) => state.UserReducer)\n    const auth = useSelector((state: RootState) => state.AuthReducer)\n    \n    console.log(\"eventId, \",Number(eventId))\n\n    const [_dateTime, setDateTime] = useState<any>();\n    const [_eventname, setEventName] = useState<string | undefined>('');\n    const [_memo, setMemo] = useState<string | undefined>('');\n    \n\n    const onSubmitForm = () => {\n\n        if(user.success && auth.logingIn){\n\n            let newEvent: IEvent = {\n                dateTime: _dateTime,\n                eventName: _eventname,\n                memo: _memo,\n                userId: user.userInfo?.id\n            }\n            console.log(\"event ID ==> \",eventId)\n            console.log(newEvent)\n\n            dispatch(editEvent(Number(eventId), newEvent))\n        }\n    }\n\n    useEffect(() => {\n        \n        if(count === 0){\n\n            dispatch(getEventDetail(Number(eventId)))\n        }\n\n        if(event.updateSuccess ){\n            history.push('/events')\n        }\n        \n        setCount(1)\n\n        return () => {\n            console.log(\"event name ==> \",_eventname)\n            setDateTime(event.event?.dateTime)\n            setEventName(event.event?.eventName)\n            setMemo(event.event?.memo)\n            console.log(\"edit terminate\")\n        }\n\n    }, [setDateTime, setEventName, setMemo, setCount, dispatch, event])\n        \n    return (\n        <div>{count == 1 &&\n            <>\n                <Link to=\"/events\">\n                    <a>Back</a>\n                </Link>\n                {event.loading &&\n                    <p>Loading ...</p>\n                }\n\n                <h3>New info</h3>\n                <div>\n                    <label>date time</label>\n                    <input type=\"datetime-local\" value={_dateTime} onChange={\n                        e => {\n                            setDateTime(e.target.value)\n                        }\n                    }/>\n                </div>\n                <div>\n                    <label>Event Name</label>\n                    <input type=\"text\" value={_eventname} onChange={\n                        e => {\n                            setEventName(e.target.value)\n                        }\n                    }/>\n                </div>\n                <div>\n                    <label>Memo</label>\n                    <textarea value={_memo} onChange={\n                        e => {\n                            setMemo(e.target.value)\n                        }\n                    }></textarea>\n                </div>\n                <div>\n                    <button onClick={onSubmitForm}>Submit</button>\n                </div>\n            </>\n        }\n            \n        </div>\n    )\n}\n\nexport default EditEventForm"]},"metadata":{},"sourceType":"module"}