{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Document/Mycos-trainee/5_Frontend/react-diaryApp/src/components/EventList/EventList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteEvent, getEventList } from '../../Action/EventAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EventList() {\n  _s();\n\n  let dispatch = useDispatch();\n  const event = useSelector(state => state.EventReducer.eventList) || [];\n  const user = useSelector(state => state.UserReducer);\n  const auth = useSelector(state => state.AuthReducer);\n\n  const onDelete = id => {\n    if (id) {\n      dispatch(deleteEvent(id));\n    }\n  };\n\n  React.useEffect(() => {\n    if (user.getsuccess && auth.logingIn) {\n      var _user$userInfo, _user$userInfo2;\n\n      console.log('uid : ', (_user$userInfo = user.userInfo) === null || _user$userInfo === void 0 ? void 0 : _user$userInfo.id);\n      dispatch(getEventList((_user$userInfo2 = user.userInfo) === null || _user$userInfo2 === void 0 ? void 0 : _user$userInfo2.id));\n    }\n\n    return console.log('terminate');\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: event.map(e => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"date time: \", e.dateTime]\n          }, e.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"event name: \", e.eventName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"memo: \", e.memo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/detail/${e.id}`,\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/edit/${e.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDelete(e.id),\n            children: \"Del\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventList, \"53LVwTQL+9jVw+z1hW4GpGNPRL8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/Users/macbook/Document/Mycos-trainee/5_Frontend/react-diaryApp/src/components/EventList/EventList.tsx"],"names":["React","useDispatch","useSelector","Link","deleteEvent","getEventList","EventList","dispatch","event","state","EventReducer","eventList","user","UserReducer","auth","AuthReducer","onDelete","id","useEffect","getsuccess","logingIn","console","log","userInfo","map","e","dateTime","eventName","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAiC,kBAAjC;AAEA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,0BAA1C;;;;AAIA,SAASC,SAAT,GAAoB;AAAA;;AAGhB,MAAIC,QAAQ,GAAGN,WAAW,EAA1B;AAGA,QAAMO,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAsBA,KAAK,CAACC,YAAN,CAAmBC,SAA1C,CAAX,IAAmE,EAAjF;AACA,QAAMC,IAAI,GAAGV,WAAW,CAAEO,KAAD,IAAsBA,KAAK,CAACI,WAA7B,CAAxB;AACA,QAAMC,IAAI,GAAGZ,WAAW,CAAEO,KAAD,IAAsBA,KAAK,CAACM,WAA7B,CAAxB;;AAEA,QAAMC,QAAQ,GAAIC,EAAD,IAAiB;AAC9B,QAAGA,EAAH,EAAM;AACFV,MAAAA,QAAQ,CAACH,WAAW,CAACa,EAAD,CAAZ,CAAR;AACH;AACJ,GAJD;;AAMAjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AAElB,QAAGN,IAAI,CAACO,UAAL,IAAkBL,IAAI,CAACM,QAA1B,EAAmC;AAAA;;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,oBAAqBV,IAAI,CAACW,QAA1B,mDAAqB,eAAeN,EAApC;AACAV,MAAAA,QAAQ,CAACF,YAAY,oBAACO,IAAI,CAACW,QAAN,oDAAC,gBAAeN,EAAhB,CAAb,CAAR;AACH;;AAGD,WACII,OAAO,CAACC,GAAR,CAAY,WAAZ,CADJ;AAIH,GAZD,EAYG,CAACf,QAAD,CAZH;AAcA,sBACI;AAAA,cAEIC,KAAK,CAACgB,GAAN,CAAUC,CAAC,IAAI;AAEX,0BACA;AAAA,+BACI;AAAA,kCACI;AAAA,sCAA4BA,CAAC,CAACC,QAA9B;AAAA,aAAUD,CAAC,CAACR,EAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,uCAAmBQ,CAAC,CAACE,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,iCAAYF,CAAC,CAACG,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAKI;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,WAAUH,CAAC,CAACR,EAAG,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,SAAQQ,CAAC,CAACR,EAAG,EAAxB;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBATJ,eAcI;AAAQ,YAAA,OAAO,EAAE,MAAMD,QAAQ,CAACS,CAAC,CAACR,EAAH,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,eAgBI;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,uBADA;AAsBH,KAxBD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GA7DQX,S;UAGUL,W,EAGDC,W,EACDA,W,EACAA,W;;;KARRI,S;AA+DT,eAAeA,SAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { deleteEvent, getEventList } from '../../Action/EventAction'\nimport { RootState } from '../../Reducer'\n\n\nfunction EventList(){\n\n\n    let dispatch = useDispatch()\n\n    \n    const event = useSelector((state: RootState) => state.EventReducer.eventList) || []\n    const user = useSelector((state: RootState) => state.UserReducer)\n    const auth = useSelector((state: RootState) => state.AuthReducer)\n\n    const onDelete = (id?: number) => {\n        if(id){\n            dispatch(deleteEvent(id))\n        }\n    }\n\n    React.useEffect(() => {\n        \n        if(user.getsuccess&& auth.logingIn){\n            console.log('uid : ',user.userInfo?.id)\n            dispatch(getEventList(user.userInfo?.id))\n        }\n        \n\n        return(\n            console.log('terminate')\n        )\n        \n    }, [dispatch])\n\n    return(\n        <div>\n            {\n            event.map(e => {\n\n                return(\n                <>\n                    <div>\n                        <div key={e.id}>date time: {e.dateTime}</div>\n                        <div >event name: {e.eventName}</div>\n                        <div>memo: {e.memo}</div>\n\n                        <li>\n                            <Link to={`/detail/${e.id}`}>View</Link>\n                        </li>\n\n                        <Link to={`/edit/${e.id}`}>\n                            <button>Edit</button>\n                        </Link>\n\n                       \n                        <button onClick={() => onDelete(e.id)}>Del</button>\n                \n                        <hr></hr>\n                    </div>\n                </>\n                )\n            })\n            }\n        </div>\n    )\n}\n\nexport default EventList\n"]},"metadata":{},"sourceType":"module"}